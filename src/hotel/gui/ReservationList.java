/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel.gui;

import hotel.Reservation;
import hotel.Reservation.Detail;
import hotel.Room;
import hotel.util.ObservableList;

/**
 *
 * @author Marc-Andre
 */
public class ReservationList extends javax.swing.JFrame {

    /**
     * Creates new form ReservationList
     */
    public ReservationList() {
    	GUI.initLookAndFeel();
        initComponents();

        /* TEST DATA */
        Reservation r = new Reservation();
        Reservation.Detail rd = new Reservation.Detail();
        Room.Category rc = new Room.Category("Test");
        
        r.setClient(new hotel.Client("Gilles", "111 111-1111"));
        //r.setConfirmationNumber(8132437);
        rd.setArrival(new java.util.Date());
        rd.setDeparture(new java.util.Date());
        rd.setQuantity(1);
        rd.setCategory(rc);
        
        ObservableList<Reservation.Detail> lrd = r.getDetails();
        lrd.add(rd);
        
        /*java.util.Vector<Object> a = new java.util.Vector<Object>();
        a.add(r.getConfirmationNumber());
        a.add(r.getClient().getName() + " - " + r.getClient().getTelephoneNumber());
        a.add(rd.getArrival());
        a.add(rd.getDeparture());
        
        // to add a row use the model and add a row
        defaultModel.addRow(a);
        defaultModel.addRow(a);
        defaultModel.removeRow(0);*/
    }
    
    public ReservationList(ObservableList<Reservation> reservations) {
    	for(int i = 0; i < reservations.size(); i++) {
    		int confirmationNumber;
    		String client;
    		java.util.Vector<Object> vector;
    		
    		hotel.Reservation currentReservation = reservations.get(i);
    		ObservableList<Reservation.Detail> lrd = currentReservation.getDetails();
            
    		confirmationNumber = currentReservation.getConfirmationNumber();
            client = currentReservation.getClient().getName() + " - " + currentReservation.getClient().getTelephoneNumber();
            
            for(int j = 0; j < lrd.size(); j++) {
            	vector = new java.util.Vector<Object>();
            	hotel.Reservation.Detail reservationDetail = lrd.get(j);
            	
            	vector.add(confirmationNumber);
            	vector.add(client);
            	vector.add(reservationDetail.getArrival());
            	vector.add(reservationDetail.getDeparture());
            	defaultModel.addRow(vector);
            }
    	}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableReservationList = new javax.swing.JTable();
        ButtonClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Réservations");

        TableReservationList.setModel(defaultModel);
        jScrollPane1.setViewportView(TableReservationList);

        ButtonClose.setText("Fermer");
        ButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ButtonClose)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonClose)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCloseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ReservationList().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonClose;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable TableReservationList;
    private javax.swing.table.DefaultTableModel defaultModel = new javax.swing.table.DefaultTableModel(
    		new Object [][] {

            },
            new String [] {
                "No confirmation", "Client", "Date d'arrivé", "Date de départ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
    // End of variables declaration//GEN-END:variables
}
