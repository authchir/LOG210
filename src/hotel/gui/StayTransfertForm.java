/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Date;
import java.util.List;

import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import hotel.Agenda;
import hotel.Client;
import hotel.Hotel;
import hotel.Room;
import hotel.Stay;
import hotel.StaySystem;
import hotel.util.Lang;
import hotel.util.ValidationException;

public class StayTransfertForm extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;
	/**
     * Creates new form Reservation
     */
    public StayTransfertForm(StaySystem ss, Stay s) {
    	staySystem = ss;
    	this.s = s;
    	
    	GUI.initLookAndFeel();
        initComponents();
        
    	TextName.setText(s.getClient().getName());
    	TextTelephone.setText(s.getClient().getTelephoneNumber());
    	TextName.setEditable(false);
    	TextTelephone.setEditable(false);
    	
    	populateTable(s);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableReservation = new javax.swing.JTable();
        ButtonClose = new javax.swing.JButton();
        ButtonStart = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        TextName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        try {
            javax.swing.text.MaskFormatter mf = new javax.swing.text.MaskFormatter("### ###-####");
            javax.swing.text.DefaultFormatterFactory factory = new javax.swing.text.DefaultFormatterFactory(mf);
            TextTelephone = new javax.swing.JFormattedTextField();
            jSeparator1 = new javax.swing.JSeparator();
            jLabel1 = new javax.swing.JLabel();
            jSeparator2 = new javax.swing.JSeparator();
            jSeparator3 = new javax.swing.JSeparator();
            jLabel4 = new javax.swing.JLabel();
            jSeparator4 = new javax.swing.JSeparator();

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            setTitle("Transfert de séjour");
            setResizable(false);

            TableReservation.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "ID", "Catégorie", "Chambre", "Date d'arrivé", "Date de départ"
                }
            ) {
                Class[] types = new Class [] {
                		Integer.class, Room.Category.class, Room.class, Object.class, Object.class
                };
                boolean[] canEdit = new boolean [] {
                    false, false, true, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            TableReservation.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            TableColumn column = TableReservation.getColumnModel().getColumn(0);
            TableReservation.getColumnModel().removeColumn(column);
            
            jScrollPane1.setViewportView(TableReservation);

            ButtonClose.setText("Fermer");
            ButtonClose.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ButtonCloseActionPerformed(evt);
                }
            });

            ButtonStart.setText("Enregistrer");
            ButtonStart.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    ButtonStartActionPerformed(evt);
                }
            });

            TextTelephone.setFormatterFactory(factory);
        } catch (java.text.ParseException pe) {
            pe.printStackTrace();
        }
        
        if (staySystem != null) {
            popupMenu = new JPopupMenu();
            JMenuItem createLinkedStay = new JMenuItem("Changer de chambre");
            createLinkedStay.addActionListener(new ActionListener() {
    			@Override
    			public void actionPerformed(ActionEvent arg0) {
    				LinkedStayActionPerformed(arg0);
			}
        });
        popupMenu.add(createLinkedStay);

            TableReservation.addMouseListener(new MouseAdapter() {
            	@Override
            	public void mousePressed(MouseEvent e) {
                    maybeShowPopup(e);
                }
    
            	@Override
                public void mouseReleased(MouseEvent e) {
                    maybeShowPopup(e);
                }
                
    			public void maybeShowPopup(MouseEvent event) {
    				
    				if (event.isPopupTrigger())
    				{
    					// Select the row under the cursor
    					int rowIndex = TableReservation.rowAtPoint(event.getPoint());
    					TableReservation.setRowSelectionInterval(rowIndex, rowIndex);
    					
    					// Show the popup menu
    					popupMenu.show(event.getComponent(), event.getX(), event.getY());
    				}
    			}
            });
        }

        jLabel1.setText("Détails du séjour");
        jLabel2.setText("Nom:");
        jLabel3.setText("Telephone:");
        jLabel4.setText("Client");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 873, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextName, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ButtonStart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonClose, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(TextTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonStart)
                    .addComponent(ButtonClose))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
	private void LinkedStayActionPerformed(ActionEvent arg0) {
		javax.swing.table.DefaultTableModel model = (DefaultTableModel) TableReservation.getModel();
		
		Date first = new Date();
		Date last = (Date)model.getValueAt(TableReservation.getSelectedRow(), 4);
		List<Room> r = Agenda.getInstance().getFreeRoom((Room.Category)model.getValueAt(TableReservation.getSelectedRow(), 1), first, last);
		
		if (r.isEmpty())
			r = Agenda.getInstance().getFreeRoom(first, last);
		
		int noChambre = SelectRoomForm.showDialog(this, this, staySystem, r);
		
		Stay.Detail d = new Stay.Detail(Hotel.getInstance().getRoomByNumber(noChambre), new Date(), (Date) model.getValueAt(model.getRowCount() - 1, 4));
		try {
			s.getDetails().get(s.getDetails().size() - 1).setArrivalAndDepartureDates((Date) model.getValueAt(model.getRowCount() - 1, 3), new Date());
		} catch (ValidationException e) {
			e.printStackTrace();
		}
		s.getDetails().add(d);
		populateTable(s);
	}

    private void ButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCloseActionPerformed
        dispose();
    }//GEN-LAST:event_ButtonCloseActionPerformed

    private void ButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonStartActionPerformed
    		Agenda.getInstance().save(s);
    }//GEN-LAST:event_ButtonStartActionPerformed

    private void populateTable(Stay s) {
    	DefaultTableModel model = (DefaultTableModel) TableReservation.getModel();
    	
    	while(model.getRowCount() != 0)
    		model.removeRow(0);
    	
    	for (int i = 0; i < s.getDetails().size(); ++i) 
    	{
    		Stay.Detail d = s.getDetails().get(i);
    		model.addRow(new Object[] {d.getId(), d.getRoom().getCategorie(), d.getRoom().getRoomNumber(), d.getArrivalDate(), d.getDepartureDate()});
    	}
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StayTransfertForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StayTransfertForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StayTransfertForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StayTransfertForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
            		Agenda.getInstance().init();
					new StayTransfertForm(new StaySystem(), Agenda.getInstance().getStays().get(0)).setVisible(true);
            }
        });
    }
    private StaySystem staySystem;
    private Stay s;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonClose;
    private javax.swing.JButton ButtonStart;
    private javax.swing.JTable TableReservation;
    private javax.swing.JTextField TextName;
    private javax.swing.JFormattedTextField TextTelephone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JPopupMenu popupMenu;
    // End of variables declaration//GEN-END:variables
}

